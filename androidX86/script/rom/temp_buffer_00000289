
local Yield = UnityEngine.Yieldk

uCoroutine = uCoroutine or {}

uCoroutine.create = function(x)

	local co = coroutine.create(x)
	coroutine.resume(co)
	return co

end

uCoroutine.yield = function(x)

	local co, ismain = coroutine.running()
	if ismain then error('Can not yield in main thread') end

	if type(x) == 'thread' and coroutine.status(x) ~= 'dead' then
		repeat
			Yield(nil, function() coroutine.resume(co) end)
			coroutine.yield()
		until coroutine.status(x) == 'dead'
	else
		Yield(x, function() coroutine.resume(co) end)
		coroutine.yield()
	end

end

-- backward compatibility of older versions
UnityEngine.Yield = uCoroutine.yield
